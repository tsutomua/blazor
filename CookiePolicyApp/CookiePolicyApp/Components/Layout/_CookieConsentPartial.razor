@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Authentication.Cookies;
@using Microsoft.AspNetCore.Authorization;

@inject IHttpContextAccessor hca
@inject IJSRuntime JSRuntime
<style>

    .alert-dismissible .close {
        position: absolute;
        top: 0;
        right: 0;
        padding: .75rem 1.25rem;
        color: inherit;
    }

    [type=button]:not(:disabled), [type=reset]:not(:disabled), [type=submit]:not(:disabled), button:not(:disabled) {
        cursor: pointer;
    }

    button.close {
        padding: 0;
        background-color: transparent;
        border: 0;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }

    .close {
        float: right;
        font-size: 1.5rem;
        font-weight: 700;
        line-height: 1;
        color: #000;
        text-shadow: 0 1px 0 #fff;
        opacity: .5;
    }

    [type=button], [type=reset], [type=submit], button {
        -webkit-appearance: button;
    }

    button, select {
        text-transform: none;
    }

    button, input {
        overflow: visible;
    }

    button, input, optgroup, select, textarea {
        margin: 0;
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
    }

    button {
        border-radius: 0;
    }

    *, ::after, ::before {
        box-sizing: border-box;
    }

    user agent stylesheet
    button {
        appearance: auto;
        font-style:;
        font-variant-ligatures:;
        font-variant-caps:;
        font-variant-numeric:;
        font-variant-east-asian:;
        font-variant-alternates:;
        font-variant-position:;
        font-variant-emoji:;
        font-weight:;
        font-stretch:;
        font-size:;
        font-family:;
        font-optical-sizing:;
        font-size-adjust:;
        font-kerning:;
        font-feature-settings:;
        font-variation-settings:;
        text-rendering: auto;
        color: buttontext;
        letter-spacing: normal;
        word-spacing: normal;
        line-height: normal;
        text-transform: none;
        text-indent: 0px;
        text-shadow: none;
        display: inline-block;
        text-align: center;
        cursor: default;
        box-sizing: border-box;
        background-color: buttonface;
        margin: 0em;
        padding-block: 1px;
        padding-inline: 6px;
        border-width: 2px;
        border-style: outset;
        border-color: buttonborder;
        border-image: initial;
    }
</style>
@if (showBanner)
{
    <div id="cookieConsent" class="alert alert-info alert-dismissible fade show" role="alert">
        NetLearner uses cookies and requires your consent.
        <button type="button" class="accept-policy close" data-dismiss="alert" aria-label="Close" data-cookie-string="@cookieString" @onclick="AcceptMessage">
            <span aria-hidden="true">Accept</span>
        </button>
    </div>

    @code {
        ITrackingConsentFeature consentFeature;
        bool showBanner;
        string cookieString;

        protected override void OnInitialized()
        {
            consentFeature = hca.HttpContext.Features.Get<ITrackingConsentFeature>();
            showBanner = !consentFeature?.CanTrack ?? false;
            cookieString = consentFeature?.CreateConsentCookie();
        }

        private void AcceptMessage()
        {
            JSRuntime.InvokeVoidAsync(
                "netLearnerJsFunctions.acceptMessage",
                cookieString);

        JSRuntime.InvokeVoidAsync(
            "netLearnerJsFunctions.showGreeting",
            cookieString);
    }
    }
}

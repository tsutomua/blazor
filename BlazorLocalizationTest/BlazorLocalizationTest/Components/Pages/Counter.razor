@page "/{culture}/counter"
@using BlazorLocalizationTest.Resources
@using Microsoft.Extensions.Localization
@using System.Globalization
@inject IHttpContextAccessor httpContextAccessor

@implements IDisposable

@inject IStringLocalizer<ApplicationResource> localizer
@inject PersistentComponentState ApplicationState
@inject NavigationManager NavigationManager


<PageTitle>Counter</PageTitle>
@rendermode InteractiveServer

<h1>@localizer["counter"]</h1>

<p role="status">@localizer["currentCount"] @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">@localizer["click"]</button>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}

@code {
    [Parameter]
    public string? culture { get; set; }


    private string currentCulture;
    private PersistingComponentStateSubscription persistingSubscription;

    protected override async Task OnInitializedAsync()
    {
        var routeValues = httpContextAccessor.HttpContext.Request.RouteValues;

        if (routeValues.Count == 0)
        {
            var v = NavigationManager.BaseUri;

        }
        persistingSubscription =
             ApplicationState.RegisterOnPersisting(PersistCulture);

        if (!ApplicationState.TryTakeFromJson<string>(
            nameof(currentCulture), out var restoredCulture))
        {
            currentCulture = routeValues["culture"]?.ToString() ?? "en";


            // ApplicationState.PersistAsJson(nameof(currentCulture), currentCulture);
            // ulture = culture;Random.Shared.Next(100);
            // Logger.LogInformation("currentCulture set to {Count}", currentCulture);
        }
        else
        {
            currentCulture = restoredCulture!;

            CultureInfo cultureInfo = CultureInfo.GetCultureInfo(currentCulture, true);
            Thread.CurrentThread.CurrentCulture = cultureInfo;
            Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(currentCulture);
           
            // NavigationManager.NavigateTo("https:localhost:7068/es/counter", true);
            NavigationManager.NavigateTo("/");
            NavigationManager.NavigateTo("es/counter");
            // NavigationManager.NavigateTo("https:localhost:7068/es/counter", true);


            // Logger.LogInformation("currentCulture restored to {Count}", currentCulture);
        }
    }

    private Task PersistCulture()
    {
        ApplicationState.PersistAsJson(nameof(currentCulture), currentCulture);

        return Task.CompletedTask;
    }

    void IDisposable.Dispose() => persistingSubscription.Dispose();
}